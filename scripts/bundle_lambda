#!/usr/bin/env bash

set -e

mkdir -p build

rm -f build/lambda.zip

## CACHE METHOD
echo "Caching dependencies"

# Compile the handler (and cache dependencies and compile artifacts into DENO_DIR).
DENO_DIR=.deno_dir deno cache src/api.ts 1> /dev/null

# This is the "remapping" step:
cp -R .deno_dir/gen/file/$PWD/ .deno_dir/LAMBDA_TASK_ROOT 1> /dev/null
# Note: We do the inversew of this operation in bootstrap.

# include import map
# cp ./import_map.json .deno_dir

echo "Zipping build"

# First zip deno deps up
zip -X build/lambda.zip -x '.deno_dir/gen/file/*' -r .deno_dir src 1> /dev/null


## Bundle Method

# Compile the handler (and cache dependencies and compile artifacts into DENO_DIR).
# deno bundle --import-map=import_map.json src/lambda.ts build/lambda.js

# # First zip deno deps up
# (cd build && zip lambda.zip lambda.js);